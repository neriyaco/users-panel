{
    "sourceFile": "src/components/UserEdit.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1679981113385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1679982538701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,15 @@\n import React, { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n \n export type EditUserProps = {\n-    user: User;\n+    user?: User;\n }\n \n export default function UserEdit({ user }: EditUserProps) {\n+    if(!user) {\n+        user = new User();\n+    }\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n"
                },
                {
                    "date": 1679985529842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n export default function UserEdit({ user }: EditUserProps) {\n     if(!user) {\n-        user = new User();\n+        user = user();\n     }\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n"
                },
                {
                    "date": 1679985709276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,13 @@\n-import { isEmail } from \"@/tools/is-email\";\n-import { User } from \"@/types/user\";\n-import React, { useMemo } from \"react\";\n+import { User, createUser } from \"@/types/user\";\n+import { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n \n export type EditUserProps = {\n-    user?: User;\n+    user: User;\n }\n \n-export default function UserEdit({ user }: EditUserProps) {\n-    if(!user) {\n-        user = user();\n-    }\n+export default function UserEdit({ user } = { user: createUser() }) {\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n"
                },
                {
                    "date": 1679986203942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n export type EditUserProps = {\n     user: User;\n }\n \n-export default function UserEdit({ user } = { user: createUser() }) {\n+export default function UserEdit({ user = createUser() } = {}) {\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n"
                },
                {
                    "date": 1679986232722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n     user: User;\n }\n \n export default function UserEdit({ user = createUser() } = {}) {\n+    console.log(user);\n+    \n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n"
                },
                {
                    "date": 1679986264600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,11 @@\n export type EditUserProps = {\n     user: User;\n }\n \n-export default function UserEdit({ user = createUser() } = {}) {\n+export default function UserEdit({ user } = { user: createUser() }) {\n     console.log(user);\n-    \n+\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n"
                },
                {
                    "date": 1679986283158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+import { User, createUser } from \"@/types/user\";\n+import { useMemo } from \"react\";\n+import DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n+\n+export type EditUserProps = {\n+    user: User;\n+}\n+\n+export default function UserEdit({ user = createUser() } = { user: createUser() }) {\n+    console.log(user);\n+\n+    const fields: DynamicFormField[] = useMemo(() => [\n+        {\n+            name: \"name.first\",\n+            label: \"First Name\",\n+            type: \"text\",\n+            required: true,\n+            value: user.name.first,\n+            validation: (value: string) => {\n+                if (value.length < 3) {\n+                    throw new Error(\"First name must be at least 3 characters\");\n+                }\n+                return true;\n+            },\n+        },\n+        {\n+            name: \"name.last\",\n+            label: \"Last Name\",\n+            type: \"text\",\n+            required: true,\n+            value: user.name.last,\n+        },\n+        {\n+            name: \"email\",\n+            label: \"Email\",\n+            type: \"email\",\n+            required: true,\n+            value: user.email,\n+        },\n+        {\n+            name: \"location.street.number\",\n+            label: \"Street Number\",\n+            type: \"number\",\n+            required: true,\n+            value: user.location.street.number,\n+        },\n+        {\n+            name: \"location.street.name\",\n+            label: \"Street Name\",\n+            type: \"text\",\n+            required: true,\n+            value: user.location.street.name,\n+        },\n+        {\n+            name: \"location.city\",\n+            label: \"City\",\n+            type: \"text\",\n+            required: true,\n+            value: user.location.city,\n+        },\n+        {\n+            name: \"location.country\",\n+            label: \"Country\",\n+            type: \"text\",\n+            required: true,\n+            value: user.location.country,\n+        },\n+    ], [user]);\n+\n+    const onSubmit = (values: any) => {\n+        const newUser = {\n+            ...user,\n+        }\n+    }\n+\n+    return (\n+        <>\n+            <h1>Edit User</h1>\n+            <DynamicForm fields={fields} onSubmit={onSubmit} />\n+        </>\n+\n+    )\n+}\n"
                },
                {
                    "date": 1679986657943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,8 @@\n     user: User;\n }\n \n export default function UserEdit({ user = createUser() } = { user: createUser() }) {\n-    console.log(user);\n-\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n@@ -66,100 +64,21 @@\n             value: user.location.country,\n         },\n     ], [user]);\n \n-    const onSubmit = (values: any) => {\n-        const newUser = {\n-            ...user,\n-        }\n-    }\n+    const title = user.id ? \"Edit User\" : \"Add User\";\n \n-    return (\n-        <>\n-            <h1>Edit User</h1>\n-            <DynamicForm fields={fields} onSubmit={onSubmit} />\n-        </>\n-\n-    )\n-}\n-import { User, createUser } from \"@/types/user\";\n-import { useMemo } from \"react\";\n-import DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n-\n-export type EditUserProps = {\n-    user: User;\n-}\n-\n-export default function UserEdit({ user } = { user: createUser() }) {\n-    console.log(user);\n-\n-    const fields: DynamicFormField[] = useMemo(() => [\n-        {\n-            name: \"name.first\",\n-            label: \"First Name\",\n-            type: \"text\",\n-            required: true,\n-            value: user.name.first,\n-            validation: (value: string) => {\n-                if (value.length < 3) {\n-                    throw new Error(\"First name must be at least 3 characters\");\n-                }\n-                return true;\n-            },\n-        },\n-        {\n-            name: \"name.last\",\n-            label: \"Last Name\",\n-            type: \"text\",\n-            required: true,\n-            value: user.name.last,\n-        },\n-        {\n-            name: \"email\",\n-            label: \"Email\",\n-            type: \"email\",\n-            required: true,\n-            value: user.email,\n-        },\n-        {\n-            name: \"location.street.number\",\n-            label: \"Street Number\",\n-            type: \"number\",\n-            required: true,\n-            value: user.location.street.number,\n-        },\n-        {\n-            name: \"location.street.name\",\n-            label: \"Street Name\",\n-            type: \"text\",\n-            required: true,\n-            value: user.location.street.name,\n-        },\n-        {\n-            name: \"location.city\",\n-            label: \"City\",\n-            type: \"text\",\n-            required: true,\n-            value: user.location.city,\n-        },\n-        {\n-            name: \"location.country\",\n-            label: \"Country\",\n-            type: \"text\",\n-            required: true,\n-            value: user.location.country,\n-        },\n-    ], [user]);\n-\n     const onSubmit = (values: any) => {\n         const newUser = {\n             ...user,\n         }\n+        console.log(newUser);\n+        \n     }\n \n     return (\n         <>\n-            <h1>Edit User</h1>\n+            <h1>{title}</h1>\n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n \n     )\n"
                },
                {
                    "date": 1679986691355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     const onSubmit = (values: any) => {\n         const newUser = {\n             ...user,\n         }\n-        console.log(newUser);\n+        console.log(values);\n         \n     }\n \n     return (\n"
                },
                {
                    "date": 1679986723310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,16 @@\n     const onSubmit = (values: any) => {\n         const newUser = {\n             ...user,\n         }\n-        console.log(values);\n-        \n+        Object.keys(values).forEach((key) => {\n+            const keys = key.split('.');\n+            let obj: any = newUser;\n+            for (let i = 0; i < keys.length - 1; i++) {\n+                obj = obj[keys[i]];\n+            }\n+            obj[keys[keys.length - 1]] = values[key];\n+        });\n     }\n \n     return (\n         <>\n"
                },
                {
                    "date": 1679986733746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,11 @@\n                 obj = obj[keys[i]];\n             }\n             obj[keys[keys.length - 1]] = values[key];\n         });\n+\n+        console.log(newUser);\n+        \n     }\n \n     return (\n         <>\n"
                },
                {
                    "date": 1679986789009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,22 @@\n \n export default function UserEdit({ user = createUser() } = { user: createUser() }) {\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n+            name: \"name.title\",\n+            label: \"Title\",\n+            type: \"select\",\n+            required: true,\n+            value: user.name.title,\n+            options: [\n+                { value: \"mr\", label: \"Mr\" },\n+                { value: \"mrs\", label: \"Mrs\" },\n+                { value: \"miss\", label: \"Miss\" },\n+                { value: \"ms\", label: \"Ms\" },\n+                { value: \"dr\", label: \"Dr\" },\n+            ],\n+        },\n+        {\n             name: \"name.first\",\n             label: \"First Name\",\n             type: \"text\",\n             required: true,\n"
                },
                {
                    "date": 1679986973105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { User, createUser } from \"@/types/user\";\n import { useMemo } from \"react\";\n-import DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n+import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -10,9 +10,9 @@\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.title\",\n             label: \"Title\",\n-            type: \"select\",\n+            type: DynamicFormFieldType.Select,\n             required: true,\n             value: user.name.title,\n             options: [\n                 { value: \"mr\", label: \"Mr\" },\n@@ -24,9 +24,9 @@\n         },\n         {\n             name: \"name.first\",\n             label: \"First Name\",\n-            type: \"text\",\n+            type: DynamicFormFieldType.Text,\n             required: true,\n             value: user.name.first,\n             validation: (value: string) => {\n                 if (value.length < 3) {\n@@ -37,44 +37,44 @@\n         },\n         {\n             name: \"name.last\",\n             label: \"Last Name\",\n-            type: \"text\",\n+            type: DynamicFormFieldType.Text,\n             required: true,\n             value: user.name.last,\n         },\n         {\n             name: \"email\",\n             label: \"Email\",\n-            type: \"email\",\n+            type: DynamicFormFieldType.Email,\n             required: true,\n             value: user.email,\n         },\n         {\n             name: \"location.street.number\",\n             label: \"Street Number\",\n-            type: \"number\",\n+            type: DynamicFormFieldType.Number,\n             required: true,\n             value: user.location.street.number,\n         },\n         {\n             name: \"location.street.name\",\n             label: \"Street Name\",\n-            type: \"text\",\n+            type: DynamicFormFieldType.Text,\n             required: true,\n             value: user.location.street.name,\n         },\n         {\n             name: \"location.city\",\n             label: \"City\",\n-            type: \"text\",\n+            type: DynamicFormFieldType.Text,\n             required: true,\n             value: user.location.city,\n         },\n         {\n             name: \"location.country\",\n             label: \"Country\",\n-            type: \"text\",\n+            type: DynamicFormFieldType.Text,\n             required: true,\n             value: user.location.country,\n         },\n     ], [user]);\n"
                },
                {
                    "date": 1679987410936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             name: \"name.title\",\n             label: \"Title\",\n             type: DynamicFormFieldType.Select,\n             required: true,\n-            value: user.name.title,\n+            value: user.name.title.toLowerCase(),\n             options: [\n                 { value: \"mr\", label: \"Mr\" },\n                 { value: \"mrs\", label: \"Mrs\" },\n                 { value: \"miss\", label: \"Miss\" },\n"
                },
                {
                    "date": 1679987592234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { User, createUser } from \"@/types/user\";\n import { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n+import { deepCopy } from \"@/tools/object\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -81,11 +82,9 @@\n \n     const title = user.id ? \"Edit User\" : \"Add User\";\n \n     const onSubmit = (values: any) => {\n-        const newUser = {\n-            ...user,\n-        }\n+        const newUser = deepCopy(user);\n         Object.keys(values).forEach((key) => {\n             const keys = key.split('.');\n             let obj: any = newUser;\n             for (let i = 0; i < keys.length - 1; i++) {\n"
                },
                {
                    "date": 1679987891998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { User, createUser } from \"@/types/user\";\n import { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n import { deepCopy } from \"@/tools/object\";\n+import { Box } from \"@mui/material\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -99,8 +100,12 @@\n \n     return (\n         <>\n             <h1>{title}</h1>\n+            <Box>\n+                <img src={user.picture.medium} alt={user.name.first} />\n+            </Box>\n+\n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n \n     )\n"
                },
                {
                    "date": 1679987912337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \n     return (\n         <>\n             <h1>{title}</h1>\n-            <Box>\n+            <Box sx={{display: 'flex', justifyContent: 'center'}}>\n                 <img src={user.picture.medium} alt={user.name.first} />\n             </Box>\n \n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n"
                },
                {
                    "date": 1679987932986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,11 @@\n     return (\n         <>\n             <h1>{title}</h1>\n             <Box sx={{display: 'flex', justifyContent: 'center'}}>\n+                <div className=\"rounded\">\n                 <img src={user.picture.medium} alt={user.name.first} />\n+                </div>\n             </Box>\n \n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n"
                },
                {
                    "date": 1679987988458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { User, createUser } from \"@/types/user\";\n import { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n import { deepCopy } from \"@/tools/object\";\n-import { Box } from \"@mui/material\";\n+import { Avatar, Box } from \"@mui/material\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -101,11 +101,9 @@\n     return (\n         <>\n             <h1>{title}</h1>\n             <Box sx={{display: 'flex', justifyContent: 'center'}}>\n-                <div className=\"rounded\">\n-                <img src={user.picture.medium} alt={user.name.first} />\n-                </div>\n+                <Avatar src={user.picture.medium} alt={user.name.first} />\n             </Box>\n \n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n"
                },
                {
                    "date": 1679988013441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n     return (\n         <>\n             <h1>{title}</h1>\n             <Box sx={{display: 'flex', justifyContent: 'center'}}>\n-                <Avatar src={user.picture.medium} alt={user.name.first} />\n+                <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n             </Box>\n \n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n"
                },
                {
                    "date": 1679988031730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,12 +100,11 @@\n \n     return (\n         <>\n             <h1>{title}</h1>\n-            <Box sx={{display: 'flex', justifyContent: 'center'}}>\n+            <Box sx={{display: 'flex', justifyContent: 'center', marginBottom: 15}}>\n                 <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n             </Box>\n-\n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n \n     )\n"
                },
                {
                    "date": 1679988043167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \n     return (\n         <>\n             <h1>{title}</h1>\n-            <Box sx={{display: 'flex', justifyContent: 'center', marginBottom: 15}}>\n+            <Box sx={{display: 'flex', justifyContent: 'center', paddingBottom: '1em'}}>\n                 <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n             </Box>\n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n         </>\n"
                },
                {
                    "date": 1679989384497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,13 @@\n             type: DynamicFormFieldType.Select,\n             required: true,\n             value: user.name.title.toLowerCase(),\n             options: [\n-                { value: \"mr\", label: \"Mr\" },\n-                { value: \"mrs\", label: \"Mrs\" },\n-                { value: \"miss\", label: \"Miss\" },\n-                { value: \"ms\", label: \"Ms\" },\n-                { value: \"dr\", label: \"Dr\" },\n+                { value: \"Mr\", label: \"Mr\" },\n+                { value: \"Mrs\", label: \"Mrs\" },\n+                { value: \"Miss\", label: \"Miss\" },\n+                { value: \"Ms\", label: \"Ms\" },\n+                { value: \"Dr\", label: \"Dr\" },\n             ],\n         },\n         {\n             name: \"name.first\",\n"
                },
                {
                    "date": 1679989712242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,10 @@\n             value: user.location.country,\n         },\n     ], [user]);\n \n+    const dispatch = useAppDispatch();\n+\n     const title = user.id ? \"Edit User\" : \"Add User\";\n \n     const onSubmit = (values: any) => {\n         const newUser = deepCopy(user);\n@@ -93,10 +95,9 @@\n             }\n             obj[keys[keys.length - 1]] = values[key];\n         });\n \n-        console.log(newUser);\n-        \n+        dispatch(updateUser)\n     }\n \n     return (\n         <>\n"
                },
                {
                    "date": 1679989773630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { useMemo } from \"react\";\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n import { deepCopy } from \"@/tools/object\";\n import { Avatar, Box } from \"@mui/material\";\n+import { useAppDispatch } from \"@/app/hooks\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -82,9 +83,9 @@\n     ], [user]);\n \n     const dispatch = useAppDispatch();\n \n-    const title = user.id ? \"Edit User\" : \"Add User\";\n+    const isNew\n \n     const onSubmit = (values: any) => {\n         const newUser = deepCopy(user);\n         Object.keys(values).forEach((key) => {\n"
                },
                {
                    "date": 1679989830245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n     ], [user]);\n \n     const dispatch = useAppDispatch();\n \n-    const isNew\n+    const isNew = !!user.id;\n \n     const onSubmit = (values: any) => {\n         const newUser = deepCopy(user);\n         Object.keys(values).forEach((key) => {\n@@ -96,9 +96,13 @@\n             }\n             obj[keys[keys.length - 1]] = values[key];\n         });\n \n-        dispatch(updateUser)\n+        if(isNew) {\n+            dispatch({ type: 'users/update', payload: newUser });\n+        } else {\n+            dispatch({ type: 'users/add', payload: newUser });\n+        }\n     }\n \n     return (\n         <>\n"
                },
                {
                    "date": 1679989874431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n import { deepCopy } from \"@/tools/object\";\n import { Avatar, Box } from \"@mui/material\";\n import { useAppDispatch } from \"@/app/hooks\";\n+import { addUser } from \"@/features/users/state\";\n \n export type EditUserProps = {\n     user: User;\n }\n@@ -97,11 +98,11 @@\n             obj[keys[keys.length - 1]] = values[key];\n         });\n \n         if(isNew) {\n-            dispatch({ type: 'users/update', payload: newUser });\n+            dispatch(addUser(newUser));\n         } else {\n-            dispatch({ type: 'users/add', payload: newUser });\n+            dispatch(addUser(newUser));\n         }\n     }\n \n     return (\n"
                },
                {
                    "date": 1679989883678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n     }\n \n     return (\n         <>\n-            <h1>{title}</h1>\n+            <h1>{isNew ? 'Add' : 'Edit'} User</h1>\n             <Box sx={{display: 'flex', justifyContent: 'center', paddingBottom: '1em'}}>\n                 <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n             </Box>\n             <DynamicForm fields={fields} onSubmit={onSubmit} />\n"
                },
                {
                    "date": 1679990674669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n             <h1>{isNew ? 'Add' : 'Edit'} User</h1>\n             <Box sx={{display: 'flex', justifyContent: 'center', paddingBottom: '1em'}}>\n                 <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n             </Box>\n-            <DynamicForm fields={fields} onSubmit={onSubmit} />\n+            <DynamicForm fields={fields} onSubmit={onSubmit} onCancel={} />\n         </>\n \n     )\n }\n"
                },
                {
                    "date": 1679990839154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,12 @@\n import { addUser } from \"@/features/users/state\";\n \n export type EditUserProps = {\n     user: User;\n+    onClose?: () => void;\n }\n \n-export default function UserEdit({ user = createUser() } = { user: createUser() }) {\n+export default function UserEdit({ user = createUser(), onClose = () => { } } = {} as EditUserProps) {\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.title\",\n             label: \"Title\",\n@@ -97,9 +98,9 @@\n             }\n             obj[keys[keys.length - 1]] = values[key];\n         });\n \n-        if(isNew) {\n+        if (isNew) {\n             dispatch(addUser(newUser));\n         } else {\n             dispatch(addUser(newUser));\n         }\n@@ -107,12 +108,12 @@\n \n     return (\n         <>\n             <h1>{isNew ? 'Add' : 'Edit'} User</h1>\n-            <Box sx={{display: 'flex', justifyContent: 'center', paddingBottom: '1em'}}>\n-                <Avatar src={user.picture.medium} alt={user.name.first} sx={{height: 80, width: 80}}/>\n+            <Box sx={{ display: 'flex', justifyContent: 'center', paddingBottom: '1em' }}>\n+                <Avatar src={user.picture.medium} alt={user.name.first} sx={{ height: 80, width: 80 }} />\n             </Box>\n-            <DynamicForm fields={fields} onSubmit={onSubmit} onCancel={} />\n+            <DynamicForm fields={fields} onSubmit={onSubmit} onCancel={onClose} />\n         </>\n \n     )\n }\n"
                },
                {
                    "date": 1679990845514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { useAppDispatch } from \"@/app/hooks\";\n import { addUser } from \"@/features/users/state\";\n \n export type EditUserProps = {\n-    user: User;\n+    user?: User;\n     onClose?: () => void;\n }\n \n export default function UserEdit({ user = createUser(), onClose = () => { } } = {} as EditUserProps) {\n"
                },
                {
                    "date": 1679991128947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,17 @@\n import DynamicForm, { DynamicFormField, DynamicFormFieldType } from \"./DynamicForm\";\n import { deepCopy } from \"@/tools/object\";\n import { Avatar, Box } from \"@mui/material\";\n import { useAppDispatch } from \"@/app/hooks\";\n-import { addUser } from \"@/features/users/state\";\n+import { addUser, updateUser } from \"@/features/users/state\";\n+import { nop } from \"@/tools/nop\";\n \n export type EditUserProps = {\n     user?: User;\n     onClose?: () => void;\n }\n \n-export default function UserEdit({ user = createUser(), onClose = () => { } } = {} as EditUserProps) {\n+export default function UserEdit({ user = createUser(), onClose = nop } = {} as EditUserProps) {\n     const fields: DynamicFormField[] = useMemo(() => [\n         {\n             name: \"name.title\",\n             label: \"Title\",\n@@ -101,9 +102,9 @@\n \n         if (isNew) {\n             dispatch(addUser(newUser));\n         } else {\n-            dispatch(addUser(newUser));\n+            dispatch(updateUser(newUser));\n         }\n     }\n \n     return (\n"
                },
                {
                    "date": 1679991196482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n             <h1>{isNew ? 'Add' : 'Edit'} User</h1>\n             <Box sx={{ display: 'flex', justifyContent: 'center', paddingBottom: '1em' }}>\n                 <Avatar src={user.picture.medium} alt={user.name.first} sx={{ height: 80, width: 80 }} />\n             </Box>\n-            <DynamicForm fields={fields} onSubmit={onSubmit} onCancel={onClose} />\n+            <DynamicForm fields={fields} onSubmit={onSubmit} onClose={onClose} />\n         </>\n \n     )\n }\n"
                }
            ],
            "date": 1679981113385,
            "name": "Commit-0",
            "content": "import { isEmail } from \"@/tools/is-email\";\nimport { User } from \"@/types/user\";\nimport React, { useMemo } from \"react\";\nimport DynamicForm, { DynamicFormField } from \"./DynamicForm\";\n\nexport type EditUserProps = {\n    user: User;\n}\n\nexport default function UserEdit({ user }: EditUserProps) {\n    const fields: DynamicFormField[] = useMemo(() => [\n        {\n            name: \"name.first\",\n            label: \"First Name\",\n            type: \"text\",\n            required: true,\n            value: user.name.first,\n            validation: (value: string) => {\n                if (value.length < 3) {\n                    throw new Error(\"First name must be at least 3 characters\");\n                }\n                return true;\n            },\n        },\n        {\n            name: \"name.last\",\n            label: \"Last Name\",\n            type: \"text\",\n            required: true,\n            value: user.name.last,\n        },\n        {\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            required: true,\n            value: user.email,\n        },\n        {\n            name: \"location.street.number\",\n            label: \"Street Number\",\n            type: \"number\",\n            required: true,\n            value: user.location.street.number,\n        },\n        {\n            name: \"location.street.name\",\n            label: \"Street Name\",\n            type: \"text\",\n            required: true,\n            value: user.location.street.name,\n        },\n        {\n            name: \"location.city\",\n            label: \"City\",\n            type: \"text\",\n            required: true,\n            value: user.location.city,\n        },\n        {\n            name: \"location.country\",\n            label: \"Country\",\n            type: \"text\",\n            required: true,\n            value: user.location.country,\n        },\n    ], [user]);\n\n    const onSubmit = (values: any) => {\n        const newUser = {\n            ...user,\n        }\n    }\n\n    return (\n        <>\n            <h1>Edit User</h1>\n            <DynamicForm fields={fields} onSubmit={onSubmit} />\n        </>\n\n    )\n}\n"
        }
    ]
}